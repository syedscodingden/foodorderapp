{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\syedo\\\\Desktop\\\\React\\\\ReactProjects\\\\FoodOrderApp\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = props => {\n  _s();\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const isEmpty = value => value.trim() === \"\";\n  const isFiveChars = value => value.trim().length === 5;\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputsValidity(prevState => {\n      return {\n        ...prevState,\n        name: enteredNameIsValid,\n        street: enteredStreetIsValid,\n        city: enteredCityIsValid,\n        postalCode: enteredPostalCodeIsValid\n      };\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode\n    });\n  };\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"HrmUUQKM0w7VSAcs5yd+fp84/4w=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","jsxDEV","_jsxDEV","Checkout","props","_s","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","isEmpty","value","trim","isFiveChars","length","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","prevState","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["C:/Users/syedo/Desktop/React/ReactProjects/FoodOrderApp/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const isEmpty = (value) => value.trim() === \"\";\r\n  const isFiveChars = (value) => value.trim().length === 5;\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n\r\n    setFormInputsValidity((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        name: enteredNameIsValid,\r\n        street: enteredStreetIsValid,\r\n        city: enteredCityIsValid,\r\n        postalCode: enteredPostalCodeIsValid,\r\n      };\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredPostalCodeIsValid &&\r\n      enteredCityIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '': classes.invalid}`;\r\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '': classes.invalid}`;\r\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '': classes.invalid}`;\r\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '': classes.invalid}`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && <p>Please enter a valid postal code (5 characters long)!</p>}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}